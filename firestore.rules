rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Função para verificar se o usuário é um administrador via custom claims.
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    // Usuários: Cada usuário só pode ler e escrever seus próprios dados.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Pedidos: Admins podem tudo. Usuários podem ler seus pedidos e "reivindicar" pedidos de convidado.
    match /orders/{orderId} {
      allow read: if isAdmin() || (request.auth.uid != null && resource.data.userId == request.auth.uid);
      allow create: if true; // A validação é feita na Cloud Function
      
      // Permite que um admin atualize qualquer campo.
      // Permite que um usuário autenticado atualize um pedido SOMENTE SE:
      // 1. O pedido ainda não tiver um 'userId' (era um pedido de convidado).
      // 2. O novo 'userId' for o UID do próprio usuário.
      // 3. A ÚNICA alteração sendo feita é a adição do 'userId'.
      allow update: if isAdmin() || 
                     (request.auth.uid != null && 
                      resource.data.userId == null && 
                      request.resource.data.userId == request.auth.uid &&
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['userId']));
                      
      allow delete: if isAdmin();
    }
    
    // Produtos e Categorias: Todos podem ler, mas apenas admins podem modificar.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Configurações da Loja: Todos podem ler, apenas admins podem modificar.
    match /store_config/{docId} {
       allow read: if true;
       allow write: if isAdmin();
    }

    // Contadores internos: Acesso bloqueado para clientes, apenas backend (Cloud Functions) pode acessar.
    match /_internal/{docId} {
      allow read, write: if false;
    }
  }
}